statement ok
DROP USER IF EXISTS 'test-grant'

statement ok
DROP DATABASE IF EXISTS `db01`

statement ok
DROP ROLE IF EXISTS `test-grant-role`

statement ok
CREATE DATABASE IF NOT EXISTS `db01`

statement ok
CREATE TABLE IF NOT EXISTS `db01`.`tb1` (id int)

statement ok
CREATE USER 'test-grant' IDENTIFIED BY 'password'

statement ok
GRANT SELECT ON * TO 'test-grant'

statement error 2201
GRANT SELECT ON * TO 'test-grant1'

statement ok
GRANT SELECT, CREATE ON * TO 'test-grant'

statement ok
GRANT ALL ON * TO 'test-grant'

statement ok
GRANT ALL PRIVILEGES ON * TO 'test-grant'

statement ok
GRANT SELECT ON db01.* TO 'test-grant'

statement ok
GRANT SELECT ON db01.tb1 TO 'test-grant'

statement ok
GRANT SELECT ON `db01`.`tb1` TO 'test-grant'

statement error 1025
GRANT SELECT ON db01.tbnotexists TO 'test-grant'

statement error 1003
GRANT SELECT ON dbnotexists.* TO 'test-grant'

onlyif mysql
query T
select current_user()
----
'root'@'%'

onlyif mysql
statement ok
set role public;

onlyif mysql
query T
select current_role()
----
public

onlyif mysql
query T
show roles
----
account_admin 0 0 1
public 0 1 0

query T
show grants for role public
----


query T
show grants for role account_admin
----
GRANT ALL ON *.* TO ROLE `account_admin`

query T
SHOW GRANTS FOR 'test-grant'
----
GRANT ALL ON 'default'.'default'.* TO 'test-grant'@'%'
GRANT SELECT ON 'default'.'db01'.* TO 'test-grant'@'%'
GRANT SELECT ON 'default'.'db01'.'tb1' TO 'test-grant'@'%'

statement ok
REVOKE SELECT ON db01.* FROM 'test-grant'

query T
SHOW GRANTS FOR 'test-grant'
----
GRANT ALL ON 'default'.'default'.* TO 'test-grant'@'%'
GRANT SELECT ON 'default'.'db01'.'tb1' TO 'test-grant'@'%'

statement ok
REVOKE ALL PRIVILEGES ON * FROM 'test-grant'

query T
SHOW GRANTS FOR 'test-grant'
----
GRANT SELECT ON 'default'.'db01'.'tb1' TO 'test-grant'@'%'

statement ok
CREATE ROLE `test-grant-role`

statement ok
GRANT SELECT ON * TO ROLE `test-grant-role`

statement error 2204
GRANT SELECT ON * TO ROLE `test-grant-role1`

query T
SHOW GRANTS FOR ROLE `test-grant-role`
----
GRANT SELECT ON 'default'.'default'.* TO ROLE `test-grant-role`

statement ok
drop role if exists all_role;

statement ok
create role all_role;

statement ok
grant all on *.* to role all_role;

query T
show grants for role all_role;
----
GRANT ALL ON *.* TO ROLE `all_role`

statement ok
set role account_admin;

statement ok
drop user if exists u1;

statement ok
create user u1 identified by '123';

statement ok
drop database if exists db1;

statement ok
create database db1;

statement ok
create table db1.t(id int);

statement ok
create stage s1;

statement ok
grant all on stage s1 to u1;

statement ok
revoke write on stage s1 from u1;

query T
show grants for u1;
----
GRANT Read ON STAGE s1 TO 'u1'@'%'

statement ok
grant all on db1.t to u1;

statement ok
revoke select on db1.t from u1;

query T
show grants for u1;
----
GRANT Read ON STAGE s1 TO 'u1'@'%'
GRANT CREATE,INSERT,UPDATE,DELETE,DROP,ALTER,GRANT ON 'default'.'db1'.'t' TO 'u1'@'%'

statement ok
grant all on db1.* to u1;

statement ok
revoke select on db1.* from u1;

query T
show grants for u1;
----
GRANT Read ON STAGE s1 TO 'u1'@'%'
GRANT CREATE,INSERT,UPDATE,DELETE,DROP,ALTER,GRANT ON 'default'.'db1'.'t' TO 'u1'@'%'
GRANT CREATE,INSERT,UPDATE,DELETE,DROP,ALTER,GRANT ON 'default'.'db1'.* TO 'u1'@'%'

statement ok
grant all on *.* to u1;

statement ok
revoke select on *.* from u1;

query T
show grants for u1;
----
GRANT Read ON STAGE s1 TO 'u1'@'%'
GRANT CREATE,INSERT,UPDATE,DELETE,DROP,ALTER,GRANT ON 'default'.'db1'.'t' TO 'u1'@'%'
GRANT CREATE,INSERT,UPDATE,DELETE,DROP,ALTER,GRANT ON 'default'.'db1'.* TO 'u1'@'%'
GRANT USAGE,CREATE,INSERT,UPDATE,DELETE,DROP,ALTER,SUPER,CREATE USER,CREATE ROLE,GRANT,DROP ROLE,DROP USER,CREATE DATAMASK,Read,Write,CREATE DATABASE ON *.* TO 'u1'@'%'

statement ok
drop database db1;

statement ok
drop stage s1;

statement ok
drop role if exists all_role;

statement ok
DROP ROLE `test-grant-role`

statement ok
DROP USER 'test-grant'

statement ok
DROP DATABASE `db01`
