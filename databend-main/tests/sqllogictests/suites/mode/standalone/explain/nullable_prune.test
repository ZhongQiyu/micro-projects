statement ok
use default

statement ok
drop table if exists t_nullable_prune

statement ok
create table t_nullable_prune (a int null)

statement ok
insert into t_nullable_prune select * from numbers(3)

statement ok
insert into t_nullable_prune select null from numbers(3)

query T
explain select * from t_nullable_prune
----
TableScan
├── table: default.default.t_nullable_prune
├── output columns: [a (#0)]
├── read rows: 6
├── read bytes: 76
├── partitions total: 2
├── partitions scanned: 2
├── pruning stats: [segments: <range pruning: 2 to 2>, blocks: <range pruning: 2 to 2, bloom pruning: 0 to 0>]
├── push downs: [filters: [], limit: NONE]
└── estimated rows: 6.00

query T
explain select * from t_nullable_prune where a is not null
----
Filter
├── output columns: [t_nullable_prune.a (#0)]
├── filters: [is_not_null(t_nullable_prune.a (#0))]
├── estimated rows: 1.20
└── TableScan
    ├── table: default.default.t_nullable_prune
    ├── output columns: [a (#0)]
    ├── read rows: 3
    ├── read bytes: 44
    ├── partitions total: 2
    ├── partitions scanned: 1
    ├── pruning stats: [segments: <range pruning: 2 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
    ├── push downs: [filters: [is_not_null(t_nullable_prune.a (#0))], limit: NONE]
    └── estimated rows: 6.00

query T
explain select * from t_nullable_prune where a is null
----
Filter
├── output columns: [t_nullable_prune.a (#0)]
├── filters: [NOT is_not_null(t_nullable_prune.a (#0))]
├── estimated rows: 4.80
└── TableScan
    ├── table: default.default.t_nullable_prune
    ├── output columns: [a (#0)]
    ├── read rows: 3
    ├── read bytes: 32
    ├── partitions total: 2
    ├── partitions scanned: 1
    ├── pruning stats: [segments: <range pruning: 2 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
    ├── push downs: [filters: [NOT is_not_null(t_nullable_prune.a (#0))], limit: NONE]
    └── estimated rows: 6.00

statement ok
DROP TABLE default.default.t_nullable_prune
