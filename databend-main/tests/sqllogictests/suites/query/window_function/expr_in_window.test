statement ok
CREATE DATABASE IF NOT EXISTS expr_in_window

statement ok
USE expr_in_window

statement ok
DROP TABLE IF EXISTS empsalary

statement ok
CREATE TABLE empsalary (depname string, empno bigint, salary int, enroll_date date)

statement ok
INSERT INTO empsalary VALUES ('develop', 10, 5200, '2007-08-01'), ('sales', 1, 5000, '2006-10-01'), ('personnel', 5, 3500, '2007-12-10'), ('sales', 4, 4800, '2007-08-08'), ('personnel', 2, 3900, '2006-12-23'), ('develop', 7, 4200, '2008-01-01'), ('develop', 9, 4500, '2008-01-01'), ('sales', 3, 4800, '2007-08-01'), ('develop', 8, 6000, '2006-10-01'), ('develop', 11, 5200, '2007-08-15')

statement ok
CREATE TABLE `empsalary2` ( `depname` VARCHAR null,  `empno` BIGINT null, `salary` INT null, `enroll_date` DATE null)

statement ok
INSERT INTO empsalary2 SELECT * FROM empsalary

query TIIR
SELECT depname, empno, salary, sum(salary + 1) OVER (PARTITION BY depname ORDER BY empno + 1) FROM empsalary ORDER BY depname, empno
----
develop 7 4200 4201
develop 8 6000 10202
develop 9 4500 14703
develop 10 5200 19904
develop 11 5200 25105
personnel 2 3900 3901
personnel 5 3500 7402
sales 1 5000 5001
sales 3 4800 9802
sales 4 4800 14603

query TIIR
SELECT enroll_date, empno, salary, sum(salary + 1) OVER (PARTITION BY enroll_date + 1 ORDER BY empno + 1) FROM empsalary ORDER BY enroll_date, empno
----
2006-10-01 1 5000 5001
2006-10-01 8 6000 11002
2006-12-23 2 3900 3901
2007-08-01 3 4800 4801
2007-08-01 10 5200 10002
2007-08-08 4 4800 4801
2007-08-15 11 5200 5201
2007-12-10 5 3500 3501
2008-01-01 7 4200 4201
2008-01-01 9 4500 8702

query IIIRT
SELECT empno, empno % 2, salary, sum(salary + 1) OVER (PARTITION BY empno % 2 ORDER BY enroll_date + 1) as W, enroll_date FROM empsalary order by W
----
1 1 5000 5001 2006-10-01
8 0 6000 6001 2006-10-01
3 1 4800 9802 2007-08-01
2 0 3900 9902 2006-12-23
11 1 5200 15003 2007-08-15
10 0 5200 15103 2007-08-01
5 1 3500 18504 2007-12-10
4 0 4800 19904 2007-08-08
7 1 4200 27206 2008-01-01
9 1 4500 27206 2008-01-01

query TII
select depname, sum(sum(salary) + 1) over (partition by 1 order by sum(salary)), sum(salary) from empsalary group by depname;
----
personnel 7401 7400
sales 22002 14600
develop 47103 25100

# lag ignore default value
query II
SELECT salary, lag(salary + 1, 2) OVER (ORDER BY enroll_date) FROM empsalary
----
5000 NULL
6000 NULL
3900 5001
5200 6001
4800 3901
4800 5201
5200 4801
3500 4801
4200 5201
4500 3501

# lag with constant default value
query II
SELECT salary, lag(salary + 1, 2, 888) OVER (ORDER BY enroll_date) FROM empsalary
----
5000 888
6000 888
3900 5001
5200 6001
4800 3901
4800 5201
5200 4801
3500 4801
4200 5201
4500 3501

# lag with column default value
query II
SELECT salary, lag(salary + 1, 2, salary + 2) OVER (ORDER BY enroll_date) FROM empsalary
----
5000 5002
6000 6002
3900 5001
5200 6001
4800 3901
4800 5201
5200 4801
3500 4801
4200 5201
4500 3501

# lead ignore default value
query II
SELECT salary, lead(salary + 1, 2) OVER (ORDER BY enroll_date) FROM empsalary
----
5000 3901
6000 5201
3900 4801
5200 4801
4800 5201
4800 3501
5200 4201
3500 4501
4200 NULL
4500 NULL

# lead with constant default value
query II
SELECT salary, lead(salary + 1, 2, 888) OVER (ORDER BY enroll_date) FROM empsalary
----
5000 3901
6000 5201
3900 4801
5200 4801
4800 5201
4800 3501
5200 4201
3500 4501
4200 888
4500 888

# lead with column default value
query II
SELECT salary, lead(salary + 1, 2, salary + 2) OVER (ORDER BY enroll_date) FROM empsalary
----
5000 3901
6000 5201
3900 4801
5200 4801
4800 5201
4800 3501
5200 4201
3500 4501
4200 4202
4500 4502

# lead with nullable column
query II
SELECT salary, lead(salary + 1, 2) OVER (ORDER BY enroll_date) c FROM empsalary2 ORDER BY salary desc
----
6000 5201
5200 4801
5200 4201
5000 3901
4800 5201
4800 3501
4500 NULL
4200 NULL
3900 4801
3500 4501

query II
SELECT salary, lead(salary + 1, 2, salary + 2) OVER (ORDER BY enroll_date) c FROM empsalary2 ORDER BY salary desc
----
6000 5201
5200 4801
5200 4201
5000 3901
4800 5201
4800 3501
4500 4502
4200 4202
3900 4801
3500 4501

# first_value
query TII
SELECT enroll_date, salary, first_value(salary + 1) OVER (ORDER BY enroll_date) FROM empsalary
----
2006-10-01 5000 5001
2006-10-01 6000 5001
2006-12-23 3900 5001
2007-08-01 5200 5001
2007-08-01 4800 5001
2007-08-08 4800 5001
2007-08-15 5200 5001
2007-12-10 3500 5001
2008-01-01 4200 5001
2008-01-01 4500 5001

query TII
SELECT enroll_date, salary, first_value(salary + 1) OVER (ORDER BY enroll_date) FROM empsalary2
----
2006-10-01 5000 5001
2006-10-01 6000 5001
2006-12-23 3900 5001
2007-08-01 5200 5001
2007-08-01 4800 5001
2007-08-08 4800 5001
2007-08-15 5200 5001
2007-12-10 3500 5001
2008-01-01 4200 5001
2008-01-01 4500 5001

# last_value
query TII
SELECT enroll_date, salary, last_value(salary + 1) OVER (ORDER BY enroll_date) FROM empsalary
----
2006-10-01 5000 6001
2006-10-01 6000 6001
2006-12-23 3900 3901
2007-08-01 5200 4801
2007-08-01 4800 4801
2007-08-08 4800 4801
2007-08-15 5200 5201
2007-12-10 3500 3501
2008-01-01 4200 4501
2008-01-01 4500 4501

# last_value
query TII
SELECT enroll_date, salary, last_value(salary + 1) OVER (ORDER BY enroll_date) FROM empsalary2
----
2006-10-01 5000 6001
2006-10-01 6000 6001
2006-12-23 3900 3901
2007-08-01 5200 4801
2007-08-01 4800 4801
2007-08-08 4800 4801
2007-08-15 5200 5201
2007-12-10 3500 3501
2008-01-01 4200 4501
2008-01-01 4500 4501

# nth_value
query III
SELECT depname, empno,
	nth_value(empno + 1, 2) OVER (
		PARTITION BY depname ORDER BY empno ASC
		ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING
		) fv
FROM empsalary
ORDER BY 1, 2
----
develop 7 9
develop 8 10
develop 9 11
develop 10 12
develop 11 NULL
personnel 2 6
personnel 5 NULL
sales 1 4
sales 3 5
sales 4 NULL

# nth_value
query III
SELECT depname, empno,
	nth_value(empno + 1, 2) OVER (
		PARTITION BY depname ORDER BY empno ASC
		ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING
		) fv
FROM empsalary2
ORDER BY 1, 2
----
develop 7 9
develop 8 10
develop 9 11
develop 10 12
develop 11 NULL
personnel 2 6
personnel 5 NULL
sales 1 4
sales 3 5
sales 4 NULL

# lag from array
query T
SELECT lag([456],8,[123]) OVER (PARTITION BY 10)
----
[123]

query T
SELECT lag([456],8,['123']) OVER (PARTITION BY 10)
----
[123]

statement error 1006
SELECT lag([456],8,['abc']) OVER (PARTITION BY 10)

statement ok
USE default

statement ok
DROP DATABASE expr_in_window
